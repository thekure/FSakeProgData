  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0                // Push constant 
         1: istore_1                // Store local variable - i
         2: iload_1                 // Load local variable integer - i = 0
         3: aload_0                 // Load argument 
         4: arraylength             // Pop and get length
         5: if_icmpge     57        // Compare and jump to 57 if greater
         8: iload_1                 // Load local variable integer - i
         9: istore_2                // Store local varible 
        10: iload_1                 // Load local variable integer - i
        11: iconst_1                // Push constant 1
        12: iadd                    // Pop and pop and add - i + 1
        13: istore_3                // Store (3rd) local variable 
        14: iload_3                 // Load variable
        15: aload_0                 // Load argument
        16: arraylength             // Pop and push length
        17: if_icmpge     37        // Pop and Pop Compare and jump to 37 if greater 
        20: aload_0                 // Load argument
        21: iload_3                 // Load (3rd) local variable
        22: iaload                  // Pop and use the popped value as index in popped arr 
        23: aload_0                 // Load argument
        24: iload_2                 // Load (2nd) local variable
        25: iaload                  // Pop and use popped value as index in popped arr
        26: if_icmpge     31        // Pop and Pop Compare and jump to 31 if greater  - compare the two index values
        29: iload_3                 // Load local variable
        30: istore_2                // Store local variable - least
        31: iinc          3, 1      // pop and increment
        34: goto          14        // Go to 14
        37: aload_0                 // Load argument
        38: iload_1                 // Load local variable 
        39: iaload                  // Pop and use the popped value as index in popped arr 
        40: istore_3                // Store local variable
        41: aload_0                 // Load argument
        42: iload_1                 // Load local variable 
        43: aload_0                 // Load argument
        44: iload_2                 // Load local variable
        45: iaload                  // Pop and use the popped value as index in popped arr 
        46: iastore                 // Store value on index
        47: aload_0                 // Load argument
        48: iload_2                 // Load local variable
        49: iload_3                 // Load local variable
        50: iastore                 // Store value on index
        51: iinc          1, 1      // increment
        54: goto          2         // Go to 2
        57: return                  // return
      LineNumberTable:
        line 21: 0
        line 22: 8
        line 23: 10
        line 24: 20
        line 25: 29
        line 23: 31
        line 26: 37
        line 21: 51
        line 28: 57
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 249 /* chop */
          offset_delta = 19